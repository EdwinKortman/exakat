name = "Make One Call With Array";
description = "Call preg_replace_call() and str_replace() with an array.  once with preg_replace_callback_array().

Calling the same function to chain modifications tends to be slower than calling the same function with all the transformations at the same time. Some PHP functions accept scalars or arrays, and using the later is more efficient.

<?php

$string = 'abcdef'; 

//str_replace() accepts arrays as arguments
$string = str_replace( ['a', 'b', 'c'],
                       ['A', 'B', 'C'],
                       $string);

// Too many calls to str_replace
$string = str_replace( 'a', 'A');
$string = str_replace( 'b', 'B');
$string = str_replace( 'c', 'C');

?>

Potential replacements : 

+-------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
| Function                                                                | Replacement                                                                       |
+-------------------------------------------------------------------------+-----------------------------------------------------------------------------------+
| str_replace()                       | str_replace()                                 |
| str_ireplace()                     | str_replace()                                 |
| substr_replace()                 | substr_replace()                           |
| preg_replace()                     | preg_replace()                               |
| preg_replace_callback()   | preg_replace_callback_array() |
+-------------------------------------------------------------------------+-----------------------------------------------------------------------------------+

<?php
$subject = 'Aaaaaa Bbb';


//preg_replace_callback_array() is better than multiple preg_replace_callback : 
preg_replace_callback_array(
    [
        '~[a]+~i' => function ($match) {
            echo strlen($match[0]), ' matches for a found', PHP_EOL;
        },
        '~[b]+~i' => function ($match) {
            echo strlen($match[0]), ' matches for b found', PHP_EOL;
        }
    ],
    $subject
);

$result = preg_replace_callback('~[a]+~i', function ($match) {
            echo strlen($match[0]), ' matches for a found', PHP_EOL;
        }, $subject);

$result = preg_replace_callback('~[b]+~i', function ($match) {
            echo strlen($match[0]), ' matches for b found', PHP_EOL;
        }, $subject);

//str_replace() accepts arrays as arguments
$string = str_replace( ['a', 'b', 'c'],
                       ['A', 'B', 'C'],
                       $string);

// Too many calls to str_replace
$string = str_replace( 'a', 'A');
$string = str_replace( 'b', 'B');
$string = str_replace( 'c', 'C');

?>

 ";
clearphp = "";
exakatSince = "0.8.4";
