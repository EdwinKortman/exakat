functions[] = ast\parse_file
functions[] = ast\parse_code
functions[] = ast\get_kind_name
functions[] = ast\kind_uses_flags
functions[] = ast\ast_dump

constants[] = 'AST_FUNC_DECL';
constants[] = 'AST_CLOSURE';
constants[] = 'AST_METHOD';
constants[] = 'AST_CLASS';
constants[] = 'AST_ARG_LIST';
constants[] = 'AST_LIST';
constants[] = 'AST_ARRAY';
constants[] = 'AST_ENCAPS_LIST';
constants[] = 'AST_EXPR_LIST';
constants[] = 'AST_STMT_LIST';
constants[] = 'AST_IF';
constants[] = 'AST_SWITCH_LIST';
constants[] = 'AST_CATCH_LIST';
constants[] = 'AST_PARAM_LIST';
constants[] = 'AST_CLOSURE_USES';
constants[] = 'AST_PROP_DECL';
constants[] = 'AST_CONST_DECL';
constants[] = 'AST_CLASS_CONST_DECL';
constants[] = 'AST_NAME_LIST';
constants[] = 'AST_TRAIT_ADAPTATIONS';
constants[] = 'AST_USE';
constants[] = 'AST_MAGIC_CONST';
constants[] = 'AST_TYPE';
constants[] = 'AST_VAR';
constants[] = 'AST_CONST';
constants[] = 'AST_UNPACK';
constants[] = 'AST_UNARY_PLUS';
constants[] = 'AST_UNARY_MINUS';
constants[] = 'AST_CAST';
constants[] = 'AST_EMPTY';
constants[] = 'AST_ISSET';
constants[] = 'AST_SILENCE';
constants[] = 'AST_SHELL_EXEC';
constants[] = 'AST_CLONE';
constants[] = 'AST_EXIT';
constants[] = 'AST_PRINT';
constants[] = 'AST_INCLUDE_OR_EVAL';
constants[] = 'AST_UNARY_OP';
constants[] = 'AST_PRE_INC';
constants[] = 'AST_PRE_DEC';
constants[] = 'AST_POST_INC';
constants[] = 'AST_POST_DEC';
constants[] = 'AST_YIELD_FROM';
constants[] = 'AST_GLOBAL';
constants[] = 'AST_UNSET';
constants[] = 'AST_RETURN';
constants[] = 'AST_LABEL';
constants[] = 'AST_REF';
constants[] = 'AST_HALT_COMPILER';
constants[] = 'AST_ECHO';
constants[] = 'AST_THROW';
constants[] = 'AST_GOTO';
constants[] = 'AST_BREAK';
constants[] = 'AST_CONTINUE';
constants[] = 'AST_DIM';
constants[] = 'AST_PROP';
constants[] = 'AST_STATIC_PROP';
constants[] = 'AST_CALL';
constants[] = 'AST_CLASS_CONST';
constants[] = 'AST_ASSIGN';
constants[] = 'AST_ASSIGN_REF';
constants[] = 'AST_ASSIGN_OP';
constants[] = 'AST_BINARY_OP';
constants[] = 'AST_GREATER';
constants[] = 'AST_GREATER_EQUAL';
constants[] = 'AST_AND';
constants[] = 'AST_OR';
constants[] = 'AST_ARRAY_ELEM';
constants[] = 'AST_NEW';
constants[] = 'AST_INSTANCEOF';
constants[] = 'AST_YIELD';
constants[] = 'AST_COALESCE';
constants[] = 'AST_STATIC';
constants[] = 'AST_WHILE';
constants[] = 'AST_DO_WHILE';
constants[] = 'AST_IF_ELEM';
constants[] = 'AST_SWITCH';
constants[] = 'AST_SWITCH_CASE';
constants[] = 'AST_DECLARE';
constants[] = 'AST_PROP_ELEM';
constants[] = 'AST_CONST_ELEM';
constants[] = 'AST_USE_TRAIT';
constants[] = 'AST_TRAIT_PRECEDENCE';
constants[] = 'AST_METHOD_REFERENCE';
constants[] = 'AST_NAMESPACE';
constants[] = 'AST_USE_ELEM';
constants[] = 'AST_TRAIT_ALIAS';
constants[] = 'AST_GROUP_USE';
constants[] = 'AST_METHOD_CALL';
constants[] = 'AST_STATIC_CALL';
constants[] = 'AST_CONDITIONAL';
constants[] = 'AST_TRY';
constants[] = 'AST_CATCH';
constants[] = 'AST_PARAM';
constants[] = 'AST_FOR';
constants[] = 'AST_FOREACH';
constants[] = 'AST_NAME';
constants[] = 'AST_CLOSURE_VAR';

classes[] = ast\node
classes[] = ast\Node\Decl

interfaces[] = 

traits[] = 
