#!/usr/bin/env php
<?php
use Everyman\Neo4j\Client,
	Everyman\Neo4j\Index\NodeIndex,
	Everyman\Neo4j\Relationship,
	Everyman\Neo4j\Node,
	Everyman\Neo4j\Gremlin,
	Tokenizer\Token;

include_once(dirname(__DIR__).'/library/Autoload.php');
spl_autoload_register('Autoload::autoload_library');

$client = new Client();

$args = $argv;
if ($id = array_search('-all', $args)) {
    define('FORMAT', 'ALL');
} elseif ($id = array_search('-file', $args)) {
    define('FORMAT', 'FILE');
    $file = $args[$id + 1];
    unset($args[$id]);
    unset($args[$id + 1]);
}elseif ($id = array_search('-list', $args)) {
    define('FORMAT', 'LIST');
} else {
    die("Need an option to run. Aborting\n");
}

if (FORMAT == 'ALL') {
    $queryTemplate = "neo4j = g.getRawGraph(); manager = neo4j.index(); manager.nodeIndexNames().each{ g.dropIndex( it ) }; manager.relationshipIndexNames().each{  g.dropIndex( it ) }";
    $params = array('type' => 'IN');
    $query = new Gremlin\Query($client, $queryTemplate, $params);
    $edges = $query->getResultSet();

    $queryTemplate = "g.E.each{ g.removeEdge(it); }";
    $params = array('type' => 'IN');
    $query = new Gremlin\Query($client, $queryTemplate, $params);
    $edges = $query->getResultSet();

    $queryTemplate = "g.V.each{ g.removeVertex(it); }";
    $params = array('type' => 'IN');
    $query = new Gremlin\Query($client, $queryTemplate, $params);
    $edges = $query->getResultSet();
    
    // Also clean index
} elseif (FORMAT == 'FILE') {
    $queryTemplate = "g.V.has('file', '$file').count()";
    $params = array('type' => 'IN');
    $query = new Gremlin\Query($client, $queryTemplate, $params);
    $count = $query->getResultSet();
    $count = $count[0][0];

    $queryTemplate = "g.V.has('file', '$file').each{ g.removeVertex(it); }";
    $params = array('type' => 'IN');
    $query = new Gremlin\Query($client, $queryTemplate, $params);
    $files = $query->getResultSet();

    print "Deleted $count elements for file '$file'\n";

    // Also clean index
} elseif (FORMAT == 'LIST') {
    $queryTemplate = "g.V.file";
    $params = array('type' => 'IN');
    $query = new Gremlin\Query($client, $queryTemplate, $params);
    $files = $query->getResultSet();
    
    $names = array();
    foreach($files as $file) {
        @$names[$file[0]]++;
    }
    
    ksort($names);
    print implode("\n", array_keys($names))."\n\n";
    
    print count($names)." distinct files\n";
    // Also clean index
} else {
    die("Unknow delete format of '".FORMAT."'. Aborting\n");
}


?>