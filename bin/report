#!/usr/bin/env php
<?php
use Everyman\Neo4j\Client,
	Everyman\Neo4j\Index\NodeIndex,
	Everyman\Neo4j\Relationship,
	Everyman\Neo4j\Node,
	Everyman\Neo4j\Gremlin,
	Tokenizer\Token,
	Michelf\MarkdownExtra,
	Report\Liste,
	Report\HashTable;

include_once(dirname(__DIR__).'/library/Autoload.php');
spl_autoload_register('Autoload::autoload_library');

$client = new Client();
$db = new Db();

$args = $argv;

if ($id = array_search('-json', $args)) {
    die("No JSON");
    define('FORMAT', 'JSON');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-text', $args)) {
    define('FORMAT', 'Text');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-ace', $args)) {
    define('FORMAT', 'Ace');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-sqlite', $args)) {
    die("No Sqlite");
    define('FORMAT', 'SQLITE');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-odt', $args)) {
    die("No ODT");
    define('FORMAT', 'ODT');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-markdown', $args)) {
    define('FORMAT', 'Markdown');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-pdf', $args)) {
    die("No PDF");
    define('FORMAT', 'PDF');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-csv', $args)) {
    define('FORMAT', 'Csv');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-html', $args)) {
    define('FORMAT', 'Html');
    unset($args[$id]);
    $args = array_values($args);
} elseif ($id = array_search('-web', $args)) {
    die("No Web");
    define('FORMAT', 'Web');
    unset($args[$id]);
    $args = array_values($args);
} else {
    define('FORMAT', 'Text');
}

if ($id = array_search('-o', $args)) {
    define('OUTPUT', true);
} else {
    define('OUTPUT', false);
}

if ($id = array_search('-f', $args)) {
    define('FILE', $args[$id + 1]);
    unset($args[$id]);
    unset($args[$id + 1]);
} else {
    define('FILE', 'report');
}

if ($id = array_search('-r', $args)) {
    define('REPORT', $args[$id + 1]);
    unset($args[$id]);
    unset($args[$id + 1]);
} else {
    define('REPORT', 'Premier');
}

$args = array_values($args);

if (!isset($args[1])) {
    $project = 'default';
} else {
    $project = $args[1];
}
if (!file_exists('./projects/'.$project.'/config.ini')) {
    print "No such project as '$project'. Aborting\n";
    die();
}
$config = parse_ini_file('./projects/'.$project.'/config.ini');

print "Building report ".REPORT." for project $project in file ".FILE.", with format ".FORMAT."\n";
$begin = microtime(true);

$reportClass = "\\Report\\Report\\".REPORT;
$report = new $reportClass($client, $db);
$report->setProject($project);
$report->prepare();
$size = $report->render(FORMAT, FILE);

$end = microtime(true);

if ($size < 1024) {
    $size = "$size b";
} else if ($size < 1024 * 1024) {
    $size = floor($size / 1024)." kb";
} else {
    $size = floor($size / pow(1024, 2))." Mb";
}

if (OUTPUT) {
    print $text;
}

$extensions = array('JSON' => 'json',
                    'HTML' => 'html',
                    'MARKDOWN' => 'md',
                    'ODT' => 'odt',
                    'PDF' => 'pdf',
                    'TEXT' => 'txt',
                    'SQLITE' => 'sqlite',
                    'CSV' => 'csv');

if (FILE) {
    $name = FILE.'.'.$extensions[FORMAT];
    if (file_exists($name)) {
        print "$name already exists. Aborting\n";
        die();
    }

    if (FORMAT == 'ODT') {
        $name1 = FILE.'.tmp.'.$extensions['HTML'];
        file_put_contents($name1, $text);

        $name = FILE.'.'.$extensions[FORMAT];
        shell_exec('pandoc -o '.$name.' '.$name1);
        unlink($name1);
    } elseif (FORMAT == 'PDF') {
        $name1 = FILE.'.tmp.'.$extensions['HTML'];
        file_put_contents($name1, $text);

        $name = FILE.'.'.$extensions[FORMAT];
        shell_exec('wkhtmltopdf '.$name1.' '.$name);
        unlink($name1);
    } elseif (FORMAT == 'CSV') {
        $fp = fopen($name, 'w');
        foreach($text as $t) {
            fputcsv($fp, $t);
        }
        fclose($fp);
    } elseif (FORMAT == 'SQLITE') {
        $db = new SQLite3($name);

        $results = $db->query('CREATE TABLE reports (id INTEGER PRIMARY KEY AUTOINCREMENT, analyzer TEXT, value TEXT, count INT)');
        foreach($text as $t) {
            foreach($t as $k => $v) {
                $t[$k] = $db->escapeString($v);
            }
            $db->query("INSERT INTO reports (analyzer, value, count) VALUES ('".join("', '", $t)."')");
        }
    } elseif (FORMAT == 'HTML') {
        file_put_contents($name, $text);
        
        if (!file_exists( dirname($name).'/media')) {
            mkdir(dirname($name).'/media', 0755);
        }
        copy('media/hartija.css', dirname($name).'/media/hartija.css');
    } else {
        file_put_contents($name, $text);
    }
}

?>