<?php

$args = $argv;

if (!isset($argv[1])) {
    print "Usage : php bin/project [Project name]\n";
    die();
}

if ($id = array_search('-p', $args)) {
    $project = $args[$id + 1];
} else {
    $project = $args[1];
}

if (!file_exists('./projects/'.$project)) {
    print "Project '$project' doesn't exists in projects folder. Aborting\n";
    die();
}

if (!file_exists('./projects/'.$project.'/config.ini')) {
    print "Project '$project' exists but has no config file. Aborting\n";
    die();
}

if (!file_exists('./projects/'.$project.'/code')) {
    print "Project '$project' exists but has no code folder. Aborting\n";
    die();
}

if (!file_exists('./projects/'.$project.'/log')) {
    print "Project '$project' exists but has no log folder. Aborting\n";
    die();
}

$files = glob_recursive('./projects/'.$project.'/code/*');

foreach($files as $file) {
    if (substr($file, -4) != '.php') { continue; }
    print "$file\n";
    print shell_exec('sh scripts/clean.sh 2 >&1 >> /dev/null'); // or php bin/delete
    shell_exec('php bin/load -f '.$file.' -p '.$project);
    shell_exec('php bin/build_root; php bin/tokenizer -p '.$project.'');
    $res = shell_exec('php bin/stat');
    if (strpos($res, 'NEXT_count : 0') === false) {
        print "KO\n";
        $fp = fopen('log/1by1.log', 'a');
        fwrite($fp, "$file\n");
        fclose($fp);
    } else {
        print "OK\n";
    }
//    shell_exec('php bin/extract_errors > ./projects/'.$project.'/log/errors.log');
//    $res = shell_exec('php bin/fullcode -p '.$project.'');
//    print $res;
    
//    shell_exec('php bin/analyze -p '.$project);
    
//    die(1);
}

function glob_recursive($pattern, $flags = 0)
    {
        $files = glob($pattern, $flags);
        
        foreach (glob(dirname($pattern).'/*', GLOB_ONLYDIR|GLOB_NOSORT) as $dir)
        {
            $files = array_merge($files, glob_recursive($dir.'/'.basename($pattern), $flags));
        }
        
        return $files;
    }
?>