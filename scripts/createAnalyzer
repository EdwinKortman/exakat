<?php

$analyzer = $argv[1];

if (!preg_match('#^([A-Z][a-zA-Z0-9]*)/([A-Z][a-zA-Z0-9]*)$#is', $analyzer, $parts)) {
    print "Usage : createAnalyzer <Dir>/<Analyzer>\n";
    
    $dirs = glob('library/Analyzer/*', GLOB_ONLYDIR);
    $dirs = array_map(function ($dir) { 
        return str_replace('library/Analyzer/', '', $dir); 
    }, $dirs);
    print "Dirs : ".join(', ', $dirs)."\n";
    die();
}

list(,$category, $name) = $parts;

if (!file_exists('library/Analyzer/'.$category)) {
    print "Usage : createAnalyzer <Dir>/<Analyzer>\n";
    print "Dir $category doesn't exists\n";
    
    $dirs = glob('library/Analyzer/*', GLOB_ONLYDIR);
    $dirs = array_map(function ($dir) { 
        return str_replace('library/Analyzer/', '', $dir); 
    }, $dirs);
    print "Dirs : ".join(', ', $dirs)."\n";
    die();
}

if (file_exists('library/Analyzer/'.$category.'/'.$name.'.php')) {
    print "Usage : createAnalyzer <Dir>/<Analyzer>\n";
    print "Analyzer $category/$name already exists\n";
    
    die();
}

// create class in library/Analyzer
$php = '<?'. <<<PHP
php

namespace Analyzer\\$category;

use Analyzer;

class $name extends Analyzer\Analyzer {
    /* Remove this if useless
    public function dependsOn() {
        return array("MethodDefinition");
    }
    */
    
    public function analyze() {
        \$this->atomIs('Identifier')
             ->back('first');
        \$this->printQuery();
        \$this->prepareQuery();
    }
}

?>

PHP;

file_put_contents('library/Analyzer/'.$analyzer.'.php', $php);

// add documentation
$ini = <<<INI
name = "$analyzer";
description = "";

INI;

file_put_contents('human/en/'.$analyzer.'.ini', $ini);

// add to sqlite
$sqlite = new Sqlite3('data/analyzers.sqlite');

$idUnassigned = $sqlite->query("SELECT id FROM categories WHERE name='Unassigned'")->fetchArray();
$idUnassigned = $idUnassigned[0];

$sqlite->query("INSERT INTO analyzers ('folder', 'name') VALUES ('$category', '$name')");
$id = $sqlite->lastInsertRowID();

$sqlite->query("INSERT INTO analyzers_categories VALUES ('$id', '$idUnassigned')"); 

// add test
shell_exec("cd tests/analyzer/; php create_test.php $analyzer");

?>