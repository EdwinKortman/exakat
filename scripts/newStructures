<?php

$old = $argv[1];
$new = $argv[2];

print "New structures between PHP $old and PHP $new\n";

// Functions
eval(' $oldFunctions = '.shell_exec('php'.$old.' -r "var_export(get_defined_functions());"').'; ?>');

eval(' $newFunctions = '.shell_exec('php'.$new.' -r "var_export(get_defined_functions());"').'; ?>');

$d = array_diff($newFunctions['internal'], $oldFunctions['internal']);
print "New functions (".count($d).")\n";
print_r($d);

$d = array_diff($oldFunctions['internal'], $newFunctions['internal']);
print "Removed functions (".count($d).")\n";
print_r($d);

// Constants
eval(' $oldConstants = '.shell_exec('php'.$old.' -r "var_export(get_defined_constants(true));"').'; ?>');

eval(' $newConstants = '.shell_exec('php'.$new.' -r "var_export(get_defined_constants(true));"').'; ?>');

$d = array();
foreach($newConstants as $ext => $newExtConstants) {
    if (!isset($oldConstants[$ext])) { continue; }
    $d[] = array_diff(array_keys($newExtConstants), array_keys($oldConstants[$ext]));
}
$d = array_merge(...$d);
print "New Constants (".count($d).")\n";
print_r($d);

$d = array();
foreach($oldConstants as $ext => $oldExtConstants) {
    if (!isset($newConstants[$ext])) { continue; }
    $d[] = array_diff(array_keys($oldExtConstants), array_keys($oldExtConstants));
}
$d = array_merge(...$d);
print "Removed Constants (".count($d).")\n";
print_r($d);

// classes
eval(' $oldClasses = '.shell_exec('php'.$old.' -r "var_export(get_declared_Classes());"').'; ?>');

eval(' $newClasses = '.shell_exec('php'.$new.' -r "var_export(get_declared_Classes());"').'; ?>');

$d = array_diff($newClasses, $oldClasses);
print "New Classes (".count($d).")\n";
print_r($d);

$d = array_diff($oldClasses, $newClasses);
print "Removed Classes (".count($d).")\n";
print_r($d);

// Traits
eval(' $oldTraits = '.shell_exec('php'.$old.' -r "var_export(get_declared_traits());"').'; ?>');

eval(' $newTraits = '.shell_exec('php'.$new.' -r "var_export(get_declared_traits());"').'; ?>');

$d = array_diff($newTraits, $oldTraits);
print "New Traits (".count($d).")\n";
print_r($d);

$d = array_diff($oldTraits, $newTraits);
print "Removed Traits (".count($d).")\n";
print_r($d);

// Interfaces
eval(' $oldInterfaces = '.shell_exec('php'.$old.' -r "var_export(get_declared_Interfaces());"').'; ?>');

eval(' $newInterfaces = '.shell_exec('php'.$new.' -r "var_export(get_declared_Interfaces());"').'; ?>');

$d = array_diff($newInterfaces, $oldInterfaces);
print "New Interfaces (".count($d).")\n";
print_r($d);

$d = array_diff($oldInterfaces, $newInterfaces);
print "Removed Interfaces (".count($d).")\n";
print_r($d);

/*
// Variables
eval(' $oldVariables = '.shell_exec('php'.$old.' -r "var_export(get_defined_vars());"').'["_SERVER"]; ?>');
eval(' $newVariables = '.shell_exec('php'.$new.' -r "var_export(get_defined_vars());"').'["_SERVER"]; ?>');

$d = array_diff($newVariables, $oldVariables);
print "New Variables (".count($d).")\n";
print_r($d);

$d = array_diff($oldVariables, $newVariables);
print "Removed Variables (".count($d).")\n";
print_r($d);
*/
?>