#!/usr/bin/env php
<?php
/*
 * Copyright 2012-2015 Damien Seguy â€“ Exakat Ltd <contact(at)exakat.io>
 * This file is part of Exakat.
 *
 * Exakat is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Exakat is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with Exakat.  If not, see <http://www.gnu.org/licenses/>.
 *
 * The latest code can be found at <http://exakat.io/>.
 *
*/

include_once(dirname(__DIR__).'/library/Autoload.php');
spl_autoload_register('Autoload::autoload_library');

$query = <<<'QUERY'

/// insert a query here
g.V().hasLabel("Functioncall").as('a').as('b')
     .not(has('token', within('T_ARRAY', 'T_LIST')))
     .where( __.in("METHOD", "NEW").count().is(eq(0)))
     .has('fullnspath')
     .not(has('token', 'T_OPEN_BRACKET'))
     .not(has('absolute', true))
//     .has('use', true)
     .select('a', 'b').by('fullcode').by('fullnspath')
//     .count();

g.V().has('code', 'strtoupper');

g.V().hasLabel('Ifthen').out('ELSE', 'THEN').has('bracket').count();
g.V().hasLabel('Ifthen').out('ELSE', 'THEN').not(has('bracket')).count();
//g.V().hasLabel('Ifthen').out('ELSE', 'THEN').count();

g.V().hasLabel('For', 'Foreach', 'While', 'Dowhile').out('BLOCK').has('bracket').count();
//g.V().hasLabel('For', 'Foreach', 'While', 'Dowhile').out('BLOCK').not(has('bracket')).count();
g.V().hasLabel('For', 'Foreach', 'While', 'Dowhile').out('BLOCK').count();

g.V().hasLabel("String", "Concatenation")
.filter{ (it.get().value('fullcode') =~ "(['\"])[\\|\$\"\\\\(][^\$].*?[\\|\$\"\\\\)][imsxeADSUXJu]*['\"]" ).getCount() > 0 }
.values('fullcode');

QUERY;

$graphDB = new \Exakat\Graph\Gremlin3($config);

$res = $graphDB->query($query);



foreach($res as $k => $v) {
    print_r($k);
    print " ";
    print_r($v);
    print "\n";
}

?>