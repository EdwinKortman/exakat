<?php

Label : CODE
  ;
  Label : ELEMENT
    class
    Label : NAME
      x3
    Label : BLOCK
      ;
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            and
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            array
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            abstract
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            for
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            protected
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            function
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            endforeach
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            exit
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            foreach
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            final
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            isset
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            static
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            trait
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            interface
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            goto
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            private
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            enddeclare
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            instanceof
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            include_once
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            or
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            throw
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            switch
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            unset
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            var
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            namespace
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            break
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            as
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            global
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            include
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            try
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            public
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            endif
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            require
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            print
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            yield
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            while
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            use
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            if
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            endswitch
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            endfor
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            list
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            insteadof
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            return
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            new
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            xor
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            require_once
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            implements
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            endwhile
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            else
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            echo
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            eval
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            do
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            empty
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            elseif
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            extends
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            default
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            die
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            continue
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            declare
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            clone
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            const
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            case
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            catch
      Label : ELEMENT
        const
        Label : CONST
          =
          Label : RIGHT
            3
          Label : LEFT
            finally
