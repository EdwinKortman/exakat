<?php

Label : CODE
  ;
  Label : ELEMENT
    assert
    Label : ARGUMENTS
      
      Label : ARGUMENT
        &&
        Label : RIGHT
          (
          Label : CODE
            =
            Label : RIGHT
              function
              Label : ARGUMENTS
                Arguments
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    =
                    Label : RIGHT
                      null
                    Label : LEFT
                      $b
                  Label : CLASS
                    X
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    $a
                  Label : CLASS
                    array
              Label : NAME
                
              Label : BLOCK
                ;
                Label : ELEMENT
                  class
                  Label : NAME
                    A
                  Label : EXTENDS
                    B
                  Label : BLOCK
                    ;
                    Label : ELEMENT
                      const
                      Label : CONST
                        =
                        Label : RIGHT
                          "aaa"
                        Label : LEFT
                          Z
                      Label : CONST
                        =
                        Label : RIGHT
                          ::
                          Label : CLASS
                            self
                          Label : CONSTANT
                            X
                        Label : LEFT
                          Y
                    Label : ELEMENT
                      const
                      Label : CONST
                        =
                        Label : RIGHT
                          12
                        Label : LEFT
                          X
                    Label : ELEMENT
                      private
                      Label : DEFINE
                        =
                        Label : RIGHT
                          null
                        Label : LEFT
                          $d
                      Label : STATIC
                        static
                      Label : PRIVATE
                        private
                    Label : ELEMENT
                      function
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          void
                      Label : NAME
                        foo
                      Label : ABSTRACT
                        abstract
                    Label : ELEMENT
                      protected
                      Label : DEFINE
                        $c
                      Label : PROTECTED
                        protected
                    Label : ELEMENT
                      public
                      Label : DEFINE
                        =
                        Label : RIGHT
                          1
                        Label : LEFT
                          $a
                      Label : DEFINE
                        $b
                      Label : PUBLIC
                        public
                    Label : ELEMENT
                      function
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          void
                      Label : NAME
                        f1
                      Label : STATIC
                        static
                      Label : BLOCK
                        ;
                        Label : ELEMENT
                          do
                          Label : BLOCK
                            ;
                            Label : ELEMENT
                              --
                              Label : POSTPLUSPLUS
                                $i
                          Label : CONDITION
                            [
                            Label : VARIABLE
                              $s
                            Label : INDEX
                              $i
                        Label : ELEMENT
                          while
                          Label : BLOCK
                            ;
                            Label : ELEMENT
                              ++
                              Label : POSTPLUSPLUS
                                $i
                          Label : CONDITION
                            [
                            Label : VARIABLE
                              $s
                            Label : INDEX
                              $i
                        Label : ELEMENT
                          foreach
                          Label : VALUE
                            =>
                            Label : KEY
                              $key
                            Label : VALUE
                              $val
                          Label : BLOCK
                            ;
                            Label : ELEMENT
                              print
                              Label : ARGUMENTS
                                
                                Label : ARGUMENT
                                  "
                                  Label : CONTAINS
                                    Concatenation
                                    Label : CONCAT
                                      $val
                                    Label : CONCAT
                                       => 
                                    Label : CONCAT
                                      $key
                                    Label : CONCAT
                                      \n
                          Label : SOURCE
                            $a
                        Label : ELEMENT
                          for
                          Label : FINAL
                            <
                            Label : RIGHT
                              $j
                            Label : LEFT
                              $i
                          Label : BLOCK
                            ;
                            Label : ELEMENT
                              =
                              Label : RIGHT
                                [
                                Label : VARIABLE
                                  $a
                                Label : INDEX
                                  $j
                              Label : LEFT
                                [
                                Label : VARIABLE
                                  $s
                                Label : INDEX
                                  $i
                          Label : INIT
                            Arguments
                            Label : ARGUMENT
                              =
                              Label : RIGHT
                                100
                              Label : LEFT
                                $j
                            Label : ARGUMENT
                              =
                              Label : RIGHT
                                0
                              Label : LEFT
                                $i
                          Label : INCREMENT
                            Arguments
                            Label : ARGUMENT
                              --
                              Label : PREPLUSPLUS
                                $j
                            Label : ARGUMENT
                              ++
                              Label : POSTPLUSPLUS
                                $i
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            $
                            Label : ARGUMENTS
                              
                              Label : ARGUMENT
                                void
                            Label : NAME
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  "_1"
                                Label : CONCAT
                                  $a
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ->
                            Label : OBJECT
                              $x
                            Label : METHOD
                              Concatenation
                              Label : ARGUMENTS
                                void
                              Label : CONCAT
                                $a
                              Label : CONCAT
                                "_1"
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : PROPERTY
                              $z
                            Label : CLASS
                              C
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ->
                            Label : OBJECT
                              $x
                            Label : METHOD
                              foo
                              Label : ARGUMENTS
                                
                                Label : ARGUMENT
                                  void
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : METHOD
                              foo
                              Label : ARGUMENTS
                                
                                Label : ARGUMENT
                                  void
                            Label : CLASS
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  $a
                                Label : CONCAT
                                  "_1"
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : CLASS
                              C
                            Label : CONSTANT
                              C
                          Label : LEFT
                            ->
                            Label : OBJECT
                              $x
                            Label : PROPERTY
                              a
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            foo
                            Label : ARGUMENTS
                              Arguments
                              Label : ARGUMENT
                                4
                              Label : ARGUMENT
                                +
                                Label : RIGHT
                                  1
                                Label : LEFT
                                  $a
                              Label : ARGUMENT
                                [
                                Label : ARGUMENTS
                                  Arguments
                                  Label : ARGUMENT
                                    1
                                  Label : ARGUMENT
                                    3
                                  Label : ARGUMENT
                                    2
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : METHOD
                              $
                              Label : ARGUMENTS
                                
                                Label : ARGUMENT
                                  void
                              Label : NAME
                                $
                                Label : NAME
                                  Concatenation
                                  Label : CONCAT
                                    "_1"
                                  Label : CONCAT
                                    $a
                            Label : CLASS
                              A
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : METHOD
                              foo
                              Label : ARGUMENTS
                                
                                Label : ARGUMENT
                                  void
                            Label : CLASS
                              A
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : PROPERTY
                              $z
                            Label : CLASS
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  "_1"
                                Label : CONCAT
                                  $a
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ->
                            Label : OBJECT
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  $a
                                Label : CONCAT
                                  "_1"
                            Label : METHOD
                              foo
                              Label : ARGUMENTS
                                
                                Label : ARGUMENT
                                  void
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : PROPERTY
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  $z
                                Label : CONCAT
                                  "_1"
                            Label : CLASS
                              C
                          Label : LEFT
                            $x
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : CLASS
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  $a
                                Label : CONCAT
                                  "_1"
                            Label : CONSTANT
                              C
                          Label : LEFT
                            ->
                            Label : OBJECT
                              $
                              Label : NAME
                                Concatenation
                                Label : CONCAT
                                  $a
                                Label : CONCAT
                                  "_1"
                            Label : PROPERTY
                              a
                        Label : ELEMENT
                          =
                          Label : RIGHT
                            ::
                            Label : CLASS
                              C
                            Label : CONSTANT
                              C
                          Label : LEFT
                            ->
                            Label : OBJECT
                              $x
                            Label : PROPERTY
                              Concatenation
                              Label : CONCAT
                                "_1"
                              Label : CONCAT
                                a
                      Label : PRIVATE
                        private
                  Label : ABSTRACT
                    abstract
                  Label : IMPLEMENTS
                    D
                  Label : IMPLEMENTS
                    C
              Label : USE
                Arguments
                Label : ARGUMENT
                  $c
                Label : ARGUMENT
                  $d
            Label : LEFT
              $a
        Label : LEFT
          0
  Label : ELEMENT
    assert
    Label : ARGUMENTS
      
      Label : ARGUMENT
        &&
        Label : RIGHT
          (
          Label : CODE
            =
            Label : RIGHT
              function
              Label : ARGUMENTS
                
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    $a
                  Label : CLASS
                    array
              Label : NAME
                
              Label : BLOCK
                ;
                Label : ELEMENT
                  declare
                  Label : TICKS
                    Arguments
                    Label : ARGUMENT
                      =
                      Label : RIGHT
                        2
                      Label : LEFT
                        B
                    Label : ARGUMENT
                      =
                      Label : RIGHT
                        1
                      Label : LEFT
                        A
                Label : ELEMENT
                  try
                  Label : CODE
                    ;
                    Label : ELEMENT
                      ++
                      Label : POSTPLUSPLUS
                        $i
                  Label : CATCH
                    catch
                    Label : CODE
                      ;
                      Label : ELEMENT
                        echo
                        Label : ARGUMENTS
                          
                          Label : ARGUMENT
                            1
                    Label : VARIABLE
                      $e
                    Label : CLASS
                      MyException
                  Label : CATCH
                    catch
                    Label : CODE
                      ;
                      Label : ELEMENT
                        echo
                        Label : ARGUMENTS
                          
                          Label : ARGUMENT
                            2
                    Label : VARIABLE
                      $e
                    Label : CLASS
                      Exception
                  Label : CATCH
                    finally
                    Label : CODE
                      ;
                      Label : ELEMENT
                        echo
                        Label : ARGUMENTS
                          
                          Label : ARGUMENT
                            3
            Label : LEFT
              $a
        Label : LEFT
          0
  Label : ELEMENT
    assert
    Label : ARGUMENTS
      
      Label : ARGUMENT
        &&
        Label : RIGHT
          (
          Label : CODE
            =
            Label : RIGHT
              function
              Label : ARGUMENTS
                
                Label : ARGUMENT
                  void
              Label : NAME
                
              Label : BLOCK
                ;
                Label : ELEMENT
                  declare
                  Label : BLOCK
                    ;
                    Label : ELEMENT
                      echo
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          1
                  Label : TICKS
                    =
                    Label : RIGHT
                      1
                    Label : LEFT
                      C
                Label : ELEMENT
                  =
                  Label : RIGHT
                    "
                    Label : CONTAINS
                      Concatenation
                      Label : CONCAT
                        $a
                      Label : CONCAT
                        '\"`
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    "
                    Label : CONTAINS
                      Concatenation
                      Label : CONCAT
                        $a
                      Label : CONCAT
                        b
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    "
                    Label : CONTAINS
                      Concatenation
                      Label : CONCAT
                        b
                      Label : CONCAT
                        $a
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    `
                    Label : CONTAINS
                      Concatenation
                      Label : CONCAT
                        '"\`
                      Label : CONCAT
                        $a
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    '\'"`$a'
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    new
                    Label : NEW
                      \
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          void
                      Label : SUBNAME
                        foo
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    new
                    Label : NEW
                      foo
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          void
                  Label : LEFT
                    $x
                Label : ELEMENT
                  \
                  Label : ARGUMENTS
                    
                    Label : ARGUMENT
                      void
                  Label : SUBNAME
                    foo
                Label : ELEMENT
                  \
                  Label : ARGUMENTS
                    
                    Label : ARGUMENT
                      void
                  Label : SUBNAME
                    namespace
                  Label : SUBNAME
                    foo
                Label : ELEMENT
                  =
                  Label : RIGHT
                    foo
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    \
                    Label : SUBNAME
                      foo
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    \
                    Label : SUBNAME
                      foo
                    Label : SUBNAME
                      namespace
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    "
                    Label : CONTAINS
                      Concatenation
                      Label : CONCAT
                         
                      Label : CONCAT
                        '---'
                      Label : CONCAT
                         
                  Label : LEFT
                    $x
                Label : ELEMENT
                  =
                  Label : RIGHT
                    "
                    Label : CONTAINS
                      Concatenation
                      Label : CONCAT
                         
                      Label : CONCAT
                        ->
                        Label : OBJECT
                          $foo
                        Label : PROPERTY
                          bar
                      Label : CONCAT
                         
                      Label : CONCAT
                        ->
                        Label : OBJECT
                          $foo
                        Label : PROPERTY
                          bar
                      Label : CONCAT
                         
                  Label : LEFT
                    $x
                Label : ELEMENT
                  foo
                  Label : ARGUMENTS
                    
                    Label : ARGUMENT
                      void
                Label : ELEMENT
                  =
                  Label : RIGHT
                    new
                    Label : NEW
                      \
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          void
                      Label : SUBNAME
                        namespace
                      Label : SUBNAME
                        foo
                  Label : LEFT
                    $x
                Label : ELEMENT
                  if
                  Label : CONDITION
                    $a
                  Label : THEN
                    void
                  Label : ELSE
                    elseif
                    Label : CONDITION
                      $b
                    Label : THEN
                      void
            Label : LEFT
              $a
        Label : LEFT
          0
  Label : ELEMENT
    assert
    Label : ARGUMENTS
      
      Label : ARGUMENT
        &&
        Label : RIGHT
          (
          Label : CODE
            =
            Label : RIGHT
              function
              Label : ARGUMENTS
                Arguments
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    =
                    Label : RIGHT
                      null
                    Label : LEFT
                      $b
                  Label : CLASS
                    X
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    $a
                  Label : CLASS
                    array
              Label : NAME
                
              Label : BLOCK
                ;
                Label : ELEMENT
                  class
                  Label : FINAL
                    final
                  Label : NAME
                    A
                  Label : BLOCK
                    ;
                    Label : ELEMENT
                      function
                      Label : FINAL
                        final
                      Label : ARGUMENTS
                        
                        Label : ARGUMENT
                          void
                      Label : NAME
                        f2
                      Label : BLOCK
                        ;
                        Label : ELEMENT
                          if
                          Label : CONDITION
                            !
                            Label : NOT
                              $x
                          Label : THEN
                            ;
                            Label : ELEMENT
                              return
                              Label : RETURN
                                0
                        Label : ELEMENT
                          if
                          Label : CONDITION
                            ==
                            Label : RIGHT
                              1
                            Label : LEFT
                              $x
                          Label : THEN
                            ;
                            Label : ELEMENT
                              return
                              Label : RETURN
                                1
                          Label : ELSE
                            Block with else
                            Label : ELEMENT
                              if
                              Label : CONDITION
                                ==
                                Label : RIGHT
                                  2
                                Label : LEFT
                                  $x
                              Label : THEN
                                ;
                                Label : ELEMENT
                                  return
                                  Label : RETURN
                                    2
                              Label : ELSE
                                Block with else
                                Label : ELEMENT
                                  if
                                  Label : CONDITION
                                    ==
                                    Label : RIGHT
                                      3
                                    Label : LEFT
                                      $x
                                  Label : THEN
                                    ;
                                    Label : ELEMENT
                                      return
                                      Label : RETURN
                                        3
                                  Label : ELSE
                                    ;
                                    Label : ELEMENT
                                      if
                                      Label : CONDITION
                                        ==
                                        Label : RIGHT
                                          9
                                        Label : LEFT
                                          $x
                                      Label : THEN
                                        ;
                                        Label : ELEMENT
                                          return
                                          Label : RETURN
                                            9
                                    Label : ELEMENT
                                      :
                                      Label : LABEL
                                        L0
                                    Label : ELEMENT
                                      do
                                      Label : BLOCK
                                        ;
                                        Label : ELEMENT
                                          switch
                                          Label : NAME
                                            $x
                                          Label : CASES
                                            Sequence Case Default
                                            Label : ELEMENT
                                              case
                                              Label : CODE
                                                Block with Sequence For Case
                                                Label : ELEMENT
                                                  continue
                                                  Label : LEVEL
                                                    2
                                              Label : CASE
                                                7
                                            Label : ELEMENT
                                              case
                                              Label : CODE
                                                Block with Sequence For Case
                                                Label : ELEMENT
                                                  break
                                                  Label : LEVEL
                                                    2
                                              Label : CASE
                                                6
                                            Label : ELEMENT
                                              case
                                              Label : CODE
                                                Block with Sequence For Case
                                                Label : ELEMENT
                                                  goto
                                                  Label : LABEL
                                                    L0
                                              Label : CASE
                                                8
                                            Label : ELEMENT
                                              case
                                              Label : CODE
                                                Block with Sequence For Case
                                                Label : ELEMENT
                                                  break
                                                  Label : LEVEL
                                                    void
                                              Label : CASE
                                                4
                                            Label : ELEMENT
                                              case
                                              Label : CODE
                                                Block with Sequence For Case
                                                Label : ELEMENT
                                                  continue
                                                  Label : LEVEL
                                                    void
                                              Label : CASE
                                                5
                                            Label : ELEMENT
                                              default
                                              Label : CODE
                                                Block with Sequence For Default
                                                Label : ELEMENT
                                                  return
                                                  Label : RETURN
                                                    void
                                      Label : CONDITION
                                        0
                      Label : PROTECTED
                        protected
              Label : USE
                Arguments
                Label : ARGUMENT
                  $d
                Label : ARGUMENT
                  $c
            Label : LEFT
              $a
        Label : LEFT
          0
  Label : ELEMENT
    assert
    Label : ARGUMENTS
      
      Label : ARGUMENT
        &&
        Label : RIGHT
          (
          Label : CODE
            =
            Label : RIGHT
              function
              Label : ARGUMENTS
                Arguments
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    =
                    Label : RIGHT
                      null
                    Label : LEFT
                      $b
                  Label : CLASS
                    X
                Label : ARGUMENT
                  Typehint
                  Label : VARIABLE
                    $a
                  Label : CLASS
                    array
              Label : NAME
                
              Label : BLOCK
                ;
                Label : ELEMENT
                  class
                  Label : NAME
                    A
                  Label : BLOCK
                    ;
                    Label : ELEMENT
                      use
                      Label : BLOCK
                        ;
                        Label : ELEMENT
                          as
                          Label : NAME
                            baz
                          Label : VISIBILITY
                            public
                        Label : ELEMENT
                          as
                          Label : NAME
                            ops
                          Label : AS
                            x
                          Label : VISIBILITY
                            protected
                        Label : ELEMENT
                          insteadof
                          Label : RIGHT
                            foo
                          Label : LEFT
                            ::
                            Label : CLASS
                              T1
                            Label : CONSTANT
                              foo
                        Label : ELEMENT
                          as
                          Label : NAME
                            ::
                            Label : CLASS
                              T2
                            Label : CONSTANT
                              foo
                          Label : AS
                            bar
                      Label : USE
                        T2
                      Label : USE
                        T1
                    Label : ELEMENT
                      use
                      Label : USE
                        T3
              Label : USE
                Arguments
                Label : ARGUMENT
                  $d
                Label : ARGUMENT
                  $c
            Label : LEFT
              $a
        Label : LEFT
          0
