<?php

Label : CODE
  ;
  Label : ELEMENT
    switch
    Label : NAME
      [
      Label : VARIABLE
        $a
      Label : INDEX
        'B'
    Label : CASES
      {
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            if
            Label : CONDITION
              (
              Label : CODE
                isset
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    ->
                    Label : OBJECT
                      $e
                    Label : PROPERTY
                      F
            Label : THEN
              {
              Label : ELEMENT
                =
                Label : LEFT
                  $f
                Label : RIGHT
                  ->
                  Label : OBJECT
                    $g
                  Label : PROPERTY
                    G
              Label : ELEMENT
                =
                Label : LEFT
                  $h
                Label : RIGHT
                  ->
                  Label : OBJECT
                    $i
                  Label : METHOD
                    H
                    Label : ARGUMENTS
                      void
                      Label : ARGUMENT
                        [
                        Label : VARIABLE
                          $j
                        Label : INDEX
                          'I'
              Label : ELEMENT
                =
                Label : LEFT
                  $k
                Label : RIGHT
                  [
                  Label : VARIABLE
                    $l
                  Label : INDEX
                    'J'
          Label : ELEMENT
            =
            Label : LEFT
              $c
            Label : RIGHT
              $d
          Label : ELEMENT
            =
            Label : LEFT
              $b
            Label : RIGHT
              ::
              Label : CLASS
                D
              Label : CONSTANT
                E
        Label : CASE
          'C'
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            =
            Label : LEFT
              $n
            Label : RIGHT
              ?
              Label : CONDITION
                (
                Label : CODE
                  ==
                  Label : LEFT
                    $o
                  Label : RIGHT
                    'N'
              Label : THEN
                O
              Label : ELSE
                P
          Label : ELEMENT
            =
            Label : LEFT
              $m
            Label : RIGHT
              ::
              Label : CLASS
                L
              Label : CONSTANT
                M
        Label : CASE
          'K'
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            =
            Label : LEFT
              $ae
            Label : RIGHT
              ::
              Label : CLASS
                AC
              Label : CONSTANT
                AD
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            if
            Label : CONDITION
              (
              Label : CODE
                ==
                Label : LEFT
                  AB
                  Label : ARGUMENTS
                    void
                    Label : ARGUMENT
                      $aa
                Label : RIGHT
                  $ab
            Label : THEN
              {
              Label : ELEMENT
                =
                Label : LEFT
                  $ac
                Label : RIGHT
                  (integer)
                  Label : CAST
                    $ad
          Label : ELEMENT
            =
            Label : LEFT
              $y
            Label : RIGHT
              (float)
              Label : CAST
                [
                Label : VARIABLE
                  $z
                Label : INDEX
                  'AA'
          Label : ELEMENT
            =
            Label : LEFT
              $x
            Label : RIGHT
              ::
              Label : CLASS
                Y
              Label : CONSTANT
                Z
        Label : CASE
          'X'
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            =
            Label : LEFT
              $w
            Label : RIGHT
              ::
              Label : CLASS
                V
              Label : CONSTANT
                W
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            if
            Label : CONDITION
              (
              Label : CODE
                ==
                Label : LEFT
                  U
                  Label : ARGUMENTS
                    void
                    Label : ARGUMENT
                      $s
                Label : RIGHT
                  $t
            Label : THEN
              {
              Label : ELEMENT
                =
                Label : LEFT
                  $u
                Label : RIGHT
                  (integer)
                  Label : CAST
                    $v
          Label : ELEMENT
            =
            Label : LEFT
              $q
            Label : RIGHT
              (float)
              Label : CAST
                [
                Label : VARIABLE
                  $r
                Label : INDEX
                  'T'
          Label : ELEMENT
            =
            Label : LEFT
              $p
            Label : RIGHT
              ::
              Label : CLASS
                R
              Label : CONSTANT
                S
        Label : CASE
          'Q'
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            ->
            Label : OBJECT
              $au
            Label : METHOD
              AO
              Label : ARGUMENTS
                void
                Label : ARGUMENT
                  $av
          Label : ELEMENT
            =
            Label : LEFT
              list
              Label : ARGUMENTS
                Arguments
                Label : ARGUMENT
                  $bb
                Label : ARGUMENT
                  $ba
                Label : ARGUMENT
                  $az
                Label : ARGUMENT
                  $ay
                Label : ARGUMENT
                  $ax
                Label : ARGUMENT
                  $aw
            Label : RIGHT
              AP
              Label : ARGUMENTS
                Arguments
                Label : ARGUMENT
                  ->
                  Label : OBJECT
                    $bc
                  Label : METHOD
                    AR
                    Label : ARGUMENTS
                      void
                      Label : ARGUMENT
                        'AT'
                Label : ARGUMENT
                  'AQ'
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            if
            Label : CONDITION
              (
              Label : CODE
                !=
                Label : LEFT
                  $bk
                Label : RIGHT
                  AW
                  Label : ARGUMENTS
                    void
                    Label : ARGUMENT
                      $bl
            Label : THEN
              {
              Label : ELEMENT
                =
                Label : LEFT
                  $bm
                Label : RIGHT
                  Concatenation
                  Label : CONCAT
                    ::
                    Label : CLASS
                      BA
                    Label : CONSTANT
                      BB
                  Label : CONCAT
                    'AZ'
                  Label : CONCAT
                    ::
                    Label : CLASS
                      AX
                    Label : CONSTANT
                      AY
            Label : ELSE
              {
              Label : ELEMENT
                =
                Label : LEFT
                  $bn
                Label : RIGHT
                  ::
                  Label : CLASS
                    BC
                  Label : CONSTANT
                    BD
          Label : ELEMENT
            =
            Label : LEFT
              $bd
            Label : RIGHT
              ::
              Label : METHOD
                AV
                Label : ARGUMENTS
                  Arguments
                  Label : ARGUMENT
                    $bj
                  Label : ARGUMENT
                    $bi
                  Label : ARGUMENT
                    $bh
                  Label : ARGUMENT
                    $bg
                  Label : ARGUMENT
                    $bf
                  Label : ARGUMENT
                    $be
              Label : CLASS
                AU
          Label : ELEMENT
            =
            Label : LEFT
              $ar
            Label : RIGHT
              new
              Label : NEW
                AM
                Label : ARGUMENTS
                  Arguments
                  Label : ARGUMENT
                    $at
                  Label : ARGUMENT
                    [
                    Label : VARIABLE
                      $as
                    Label : INDEX
                      'AN'
          Label : ELEMENT
            =
            Label : LEFT
              $aq
            Label : RIGHT
              ::
              Label : CLASS
                AK
              Label : CONSTANT
                AL
        Label : CASE
          'AJ'
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            if
            Label : CONDITION
              (
              Label : CODE
                ==
                Label : LEFT
                  AI
                  Label : ARGUMENTS
                    void
                    Label : ARGUMENT
                      $ai
                Label : RIGHT
                  $aj
            Label : THEN
              {
              Label : ELEMENT
                if
                Label : CONDITION
                  (
                  Label : CODE
                    =
                    Label : LEFT
                      $ak
                    Label : RIGHT
                      (integer)
                      Label : CAST
                        $al
                Label : THEN
                  Block with if/elseif
                  Label : ELEMENT
                    =
                    Label : LEFT
                      $am
                    Label : RIGHT
                      (integer)
                      Label : CAST
                        $an
                Label : ELSE
                  Block with else
                  Label : ELEMENT
                    =
                    Label : LEFT
                      $ao
                    Label : RIGHT
                      (float)
                      Label : CAST
                        $ap
          Label : ELEMENT
            =
            Label : LEFT
              $ag
            Label : RIGHT
              (float)
              Label : CAST
                [
                Label : VARIABLE
                  $ah
                Label : INDEX
                  'AH'
          Label : ELEMENT
            =
            Label : LEFT
              $af
            Label : RIGHT
              ::
              Label : CLASS
                AF
              Label : CONSTANT
                AG
        Label : CASE
          'AE'
      Label : ELEMENT
        case
        Label : CODE
          ;
          Label : ELEMENT
            =
            Label : LEFT
              $br
            Label : RIGHT
              ::
              Label : CLASS
                BQ
              Label : CONSTANT
                BR
          Label : ELEMENT
            break
            Label : LEVEL
              void
          Label : ELEMENT
            =
            Label : LEFT
              $bp
            Label : RIGHT
              ::
              Label : METHOD
                BI
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    BJ
                    Label : ARGUMENTS
                      void
                      Label : ARGUMENT
                        Concatenation
                        Label : CONCAT
                          BL
                          Label : ARGUMENTS
                            Arguments
                            Label : ARGUMENT
                              BN
                              Label : ARGUMENTS
                                Arguments
                                Label : ARGUMENT
                                  'BP'
                                Label : ARGUMENT
                                  [
                                  Label : VARIABLE
                                    $bq
                                  Label : INDEX
                                    'BO'
                            Label : ARGUMENT
                              'BM'
                        Label : CONCAT
                          'BK'
              Label : CLASS
                BH
          Label : ELEMENT
            =
            Label : LEFT
              $bo
            Label : RIGHT
              ::
              Label : CLASS
                BF
              Label : CONSTANT
                BG
        Label : CASE
          'BE'
