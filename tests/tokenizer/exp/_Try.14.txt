<?php

Label : CODE
  makeSequence T_OPEN_TAG
  Label : ELEMENT
    try
    Label : CODE
      {
      Label : ELEMENT
        =
        Label : RIGHT
          new
          Label : NEW
            F
            Label : ARGUMENTS
              void
              Label : ARGUMENT
                $e
        Label : LEFT
          $d
      Label : ELEMENT
        =
        Label : RIGHT
          array
          Label : ARGUMENTS
            ,
            Label : ARGUMENT
              =>
              Label : KEY
                'G'
              Label : VALUE
                $g
            Label : ARGUMENT
              =>
              Label : KEY
                'H'
              Label : VALUE
                $h
            Label : ARGUMENT
              =>
              Label : KEY
                'I'
              Label : VALUE
                $i
        Label : LEFT
          $f
      Label : ELEMENT
        =
        Label : RIGHT
          new
          Label : NEW
            J
            Label : ARGUMENTS
              void
              Label : ARGUMENT
                ::
                Label : PROPERTY
                  $k
                Label : CLASS
                  K
        Label : LEFT
          $j
      Label : ELEMENT
        =
        Label : RIGHT
          ->
          Label : OBJECT
            $o
          Label : METHOD
            O
            Label : ARGUMENTS
              ,
              Label : ARGUMENT
                'P'
              Label : ARGUMENT
                $p
        Label : LEFT
          $n
      Label : ELEMENT
        return
        Label : RETURN
          [
          Label : VARIABLE
            $q
          Label : INDEX
            'Q'
      Label : ELEMENT
        ->
        Label : OBJECT
          $l
        Label : METHOD
          L
          Label : ARGUMENTS
            ,
            Label : ARGUMENT
              ::
              Label : PROPERTY
                $m
              Label : CLASS
                M
            Label : ARGUMENT
              'N'
    Label : CATCH
      catch
      Label : VARIABLE
        $y
      Label : CLASS
        AF
      Label : CODE
        {
        Label : ELEMENT
          makeSequence T_OPEN_CURLY
          Label : ELEMENT
            throw
            Label : THROW
              new
              Label : NEW
                AG
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    'AH'
    Label : CATCH
      catch
      Label : VARIABLE
        $w
      Label : CLASS
        AC
      Label : CODE
        {
        Label : ELEMENT
          makeSequence T_OPEN_CURLY
          Label : ELEMENT
            throw
            Label : THROW
              new
              Label : NEW
                AD
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    ->
                    Label : OBJECT
                      $x
                    Label : METHOD
                      AE
                      Label : ARGUMENTS
                        void
                        Label : ARGUMENT
                          void
    Label : CATCH
      catch
      Label : VARIABLE
        $u
      Label : CLASS
        Z
      Label : CODE
        {
        Label : ELEMENT
          makeSequence T_OPEN_CURLY
          Label : ELEMENT
            throw
            Label : THROW
              new
              Label : NEW
                AA
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    ->
                    Label : OBJECT
                      $v
                    Label : METHOD
                      AB
                      Label : ARGUMENTS
                        void
                        Label : ARGUMENT
                          void
    Label : CATCH
      catch
      Label : VARIABLE
        $s
      Label : CLASS
        U
      Label : CODE
        {
        Label : ELEMENT
          makeSequence T_OPEN_CURLY
          Label : ELEMENT
            throw
            Label : THROW
              new
              Label : NEW
                V
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    .
                    Label : CONCAT
                      'W'
                    Label : CONCAT
                      [
                      Label : VARIABLE
                        ->
                        Label : OBJECT
                          $t
                        Label : PROPERTY
                          X
                      Label : INDEX
                        'Y'
    Label : CATCH
      catch
      Label : VARIABLE
        $r
      Label : CLASS
        R
      Label : CODE
        {
        Label : ELEMENT
          makeSequence T_OPEN_CURLY
          Label : ELEMENT
            throw
            Label : THROW
              new
              Label : NEW
                S
                Label : ARGUMENTS
                  void
                  Label : ARGUMENT
                    'T'
  Label : ELEMENT
    if
    Label : CONDITION
      (
      Label : CODE
        !
        Label : NOT
          C
          Label : ARGUMENTS
            ,
            Label : ARGUMENT
              $b
            Label : ARGUMENT
              $c
    Label : THEN
      {
      Label : ELEMENT
        makeSequence T_OPEN_CURLY
        Label : ELEMENT
          throw
          Label : THROW
            new
            Label : NEW
              D
              Label : ARGUMENTS
                void
                Label : ARGUMENT
                  'E'
  Label : ELEMENT
    =
    Label : RIGHT
      'B'
    Label : LEFT
      $a
